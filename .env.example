# Briefly Environment Variables Example
# Copy this file to .env in your project directory for local development
# These environment variables take precedence over YAML configuration

# =============================================================================
# REQUIRED: AI/LLM Configuration
# =============================================================================

# Google Gemini API Key (Required for all AI features)
# Get your API key from: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=your-gemini-api-key-here

# =============================================================================
# SEARCH PROVIDERS (Choose one or more based on your needs)
# =============================================================================

# Google Custom Search (Recommended for high-quality results)
# Setup instructions: https://developers.google.com/custom-search/v1/overview
# 1. Create a custom search engine at: https://cse.google.com/cse/
# 2. Get API key from: https://console.cloud.google.com/apis/credentials
GOOGLE_CSE_API_KEY=your-google-custom-search-api-key
GOOGLE_CSE_ID=your-custom-search-engine-id

# SerpAPI (Premium search service with Google results)
# Get your API key from: https://serpapi.com/dashboard
SERPAPI_KEY=your-serpapi-key-here

# =============================================================================
# MULTI-CHANNEL OUTPUT (Optional)
# =============================================================================

# Slack Integration
# Create incoming webhook at: https://api.slack.com/messaging/webhooks
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# Discord Integration  
# Create webhook in Discord channel settings
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/YOUR/DISCORD/WEBHOOK

# =============================================================================
# TEXT-TO-SPEECH PROVIDERS (Optional)
# =============================================================================

# OpenAI TTS (Recommended for natural voices)
# Get API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=your-openai-api-key-here

# ElevenLabs (High-quality voice cloning)
# Get API key from: https://elevenlabs.io/speech-synthesis
ELEVENLABS_API_KEY=your-elevenlabs-api-key-here

# =============================================================================
# DEVELOPMENT & TESTING
# =============================================================================

# Set to any value to enable debug logging
# DEBUG=1

# Set to any value to use mock providers for testing
# BRIEFLY_USE_MOCK=1

# Override default model for testing
# BRIEFLY_MODEL=gemini-2.5-flash-preview-05-20

# Override cache directory for testing
# BRIEFLY_CACHE_DIR=/tmp/briefly-test-cache

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================

# Custom User Agent for web scraping (optional)
# USER_AGENT="Briefly Bot 1.0 (Contact: your-email@domain.com)"

# Proxy configuration (if needed)
# HTTP_PROXY=http://proxy.company.com:8080
# HTTPS_PROXY=http://proxy.company.com:8080

# Rate limiting configuration (milliseconds between requests)
# BRIEFLY_RATE_LIMIT_MS=1000

# =============================================================================
# GETTING STARTED
# =============================================================================
# 
# Minimal setup (required):
# 1. Set GEMINI_API_KEY for AI features
# 2. Optionally set search provider keys for research features
#
# Example minimal .env file:
# GEMINI_API_KEY=your-key-here
# GOOGLE_CSE_API_KEY=your-google-key  
# GOOGLE_CSE_ID=your-search-engine-id
#
# Test your setup:
# briefly digest input/test-links.md
# briefly research "AI trends" --provider google
# briefly deep-research "machine learning" --search-provider google
#
# =============================================================================